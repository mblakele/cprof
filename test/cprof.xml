<!--
    : Copyright (c)2011-2012 Michael Blakeley. All Rights Reserved.
    :
    : Licensed under the Apache License, Version 2.0 (the "License");
    : you may not use this file except in compliance with the License.
    : You may obtain a copy of the License at
    :
    : http://www.apache.org/licenses/LICENSE-2.0
    :
    : Unless required by applicable law or agreed to in writing, software
    : distributed under the License is distributed on an "AS IS" BASIS,
    : WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    : See the License for the specific language governing permissions and
    : limitations under the License.
    :
    : The use of the Apache License does not indicate that this project is
    : affiliated with the Apache Software Foundation.
-->
<!-- cf https://github.com/mblakele/xqut -->
<suite xmlns="com.blakeley.xqut"
       xmlns:xs="http://www.w3.org/2001/XMLSchema"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="com.blakeley.cprof">
  <environment
      root="/Users/mblakele/Source/mblakele-cprof/src/"
      database-name="Documents">
    <import prefix="p" ns="com.blakeley.cprof" at="cprof.xqy"/>
  </environment>

  <unit result="1" note="parse test">1</unit>

  <unit note="default disabled">
    <result xsi:type="xs:boolean">0</result>
    <expr>p:enabled()</expr>
  </unit>

  <unit note="empty report">
    <result xsi:type="xs:boolean">1</result>
    <expr>empty(p:report())</expr>
  </unit>

  <unit note="profile with eval">
    <result>2</result>
    <expr>
      p:enable(),
      xdmp:sleep(5),
      p:eval('xdmp:sleep(5)'),
      count(p:report())
    </expr>
  </unit>

  <unit note="profile with eval, two args">
    <result>2</result>
    <expr>
      p:enable(),
      xdmp:sleep(5),
      p:eval(
        'declare variable $millis external; xdmp:sleep($millis)',
        (xs:QName('millis'), 5)),
      count(p:report())
    </expr>
  </unit>

  <unit note="profile with eval, three args">
    <result>2</result>
    <expr>
      p:enable(),
      xdmp:sleep(5),
      p:eval(
        'define variable $millis external xdmp:sleep($millis)',
        (xs:QName('millis'), 5),
        <options xmlns="xdmp:eval">
          <default-xquery-version>0.9-ml</default-xquery-version>
        </options>),
      count(p:report())
    </expr>
  </unit>

  <unit note="profile with invoke">
    <result>2</result>
    <expr>
      p:enable(),
      xdmp:sleep(5),
      p:invoke('test.xqy'),
      count(p:report())
    </expr>
  </unit>

  <unit note="profile with value">
    <result>2</result>
    <expr>
      p:enable(),
      xdmp:sleep(5),
      p:value('xdmp:sleep(5)'),
      count(p:report())
    </expr>
  </unit>

  <unit note="profile with xslt-eval">
    <result>2</result>
    <expr>
      p:enable(),
      xdmp:sleep(5),
      p:xslt-eval(
      &lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
      xmlns:xdmp="http://marklogic.com/xdmp"
      version="2.0">
      &lt;xsl:template match="*">
      &lt;xsl:apply-templates select="xdmp:sleep(5)"/>
      &lt;/xsl:template>
      &lt;/xsl:stylesheet>,
      &lt;test/>)/*,
      count(p:report())
    </expr>
  </unit>

  <unit note="profile with xslt-invoke">
    <result>2</result>
    <expr>
      p:enable(),
      xdmp:sleep(5),
      p:xslt-invoke('test.xsl', &lt;test/>)/*,
      count(p:report())
    </expr>
  </unit>

  <unit note="profile with eval and merge">
    <result>1</result>
    <expr>
      p:enable(),
      xdmp:sleep(5),
      p:eval('xdmp:sleep(5)'),
      count(p:report(true()))
    </expr>
  </unit>

</suite>
